{"version":3,"sources":["components/Category.js","components/List.js","components/withListLoading.js","App.js","reportWebVitals.js","index.js"],"names":["Category","className","List","props","category","length","map","index","console","log","WithListLoading","Component","isLoading","style","textAlign","fontWeight","fontSize","App","ListLoading","withListLoading","useState","loading","appState","setAppState","useEffect","fetch","then","res","json","role","aria-label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAWeA,MATf,WACE,OACE,kCACE,sBAAMC,UAAU,uBAAhB,yDCiBSC,EAnBF,SAACC,GAAW,IACfC,EAAaD,EAAbC,SACR,OAAKA,GAAgC,IAApBA,EAASC,OAGxB,+BACE,oBAAIJ,UAAU,YAAd,yCACCG,EAASE,KAAI,SAACF,EAAUG,GAEvB,OADAC,QAAQC,IAAIL,GAEV,qBAAgBH,UAAU,OAA1B,UACE,uBAAMA,UAAU,gBAAhB,UAAiCG,EAAjC,OACA,cAAC,EAAD,MAFOG,SAPR,mBAAGN,UAAU,YAAb,iC,cCMIS,MAVf,SAAyBC,GACvB,OAAO,YAAuD,IAAxBC,EAAuB,EAAvBA,UAAcT,EAAS,6BAC3D,OAAKS,EAEH,mBAAGC,MAAO,CAAEC,UAAW,SAAUC,WAAY,MAAOC,SAAU,QAA9D,0DAFqB,cAACL,EAAD,eAAeR,MC6C3Bc,MA5Cf,WACE,IAAMC,EAAcC,EAAgBjB,GADvB,EAEmBkB,mBAAS,CACvCC,SAAS,EACTjB,SAAU,KAJC,mBAENkB,EAFM,KAEIC,EAFJ,KAkBb,OAXAC,qBAAU,WACRD,EAAY,CAAEF,SAAS,IAEvBI,MADY,+CAETC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLJ,EAAY,CAAEF,SAAS,EAAOjB,SAAUuB,IACxCnB,QAAQC,IAAIkB,QAEf,CAACJ,IAGF,8BACE,sBAAKtB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qDAEF,qBAAKA,UAAU,qBAAf,SACE,cAACiB,EAAD,CACEN,UAAWU,EAASD,QACpBjB,SAAUkB,EAASlB,aAGvB,iCACE,sBAAKH,UAAU,SAAf,kBACQ,IACN,sBAAM4B,KAAK,MAAMC,aAAW,OAA5B,gBAEQ,IAJV,2BCxBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.60c57322.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Category() {\n  return (\n    <section>\n      <span className=\"category-description\">\n        Hello, user! Tons of useful info here...\n      </span>\n    </section>\n  );\n}\nexport default Category;\n","import React from \"react\";\nimport Category from \"./Category\";\n\nconst List = (props) => {\n  const { category } = props;\n  if (!category || category.length === 0)\n    return <p className=\"list-head\">No category, sorry</p>;\n  return (\n    <ul>\n      <h2 className=\"list-head\">Available Public Categories</h2>\n      {category.map((category, index) => {\n        console.log(category);\n        return (\n          <li key={index} className=\"list\">\n            <span className=\"category-text\">{category} </span>\n            <Category />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default List;\n","import React from \"react\";\n\nfunction WithListLoading(Component) {\n  return function WihLoadingComponent({ isLoading, ...props }) {\n    if (!isLoading) return <Component {...props} />;\n    return (\n      <p style={{ textAlign: \"center\", fontWeight: \"800\", fontSize: \"30px\" }}>\n        Hold on, fetching data may take some time :)\n      </p>\n    );\n  };\n}\nexport default WithListLoading;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport List from \"./components/List\";\nimport withListLoading from \"./components/withListLoading\";\n\nfunction App() {\n  const ListLoading = withListLoading(List);\n  const [appState, setAppState] = useState({\n    loading: false,\n    category: [],\n  });\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    const apiUrl = `https://api.chucknorris.io/jokes/categories`;\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((res) => {\n        setAppState({ loading: false, category: res });\n        console.log(res)\n      });\n  }, [setAppState]);\n\n  return (\n    <div>\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1>Chuck Norris Joke</h1>\n        </div>\n        <div className=\"category-container\">\n          <ListLoading\n            isLoading={appState.loading}\n            category={appState.category}\n          />\n        </div>\n        <footer>\n          <div className=\"footer\">\n            Built{\" \"}\n            <span role=\"img\" aria-label=\"love\">\n              by\n            </span>{\" \"}\n            Collins Akumu\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n// import React, { Component } from 'react'\n// import axios from 'axios'\n// import \"./App.css\";\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//        value: '',\n//        categories: [],\n//        url: ''\n//     }\n//  }\n\n//  componentDidMount() {\n//     this.getJoke()\n//  }\n\n//  getJoke() {\n//     let url = 'https://api.chucknorris.io/jokes/random'\n\n//     axios.get(url)\n//        .then(res => {\n//           let data = res.data\n//           console.log(data)\n\n//           this.setState({\n//              value: data,\n//              categories: data,\n//              url: data\n//           })\n//        })\n//  }\n\n//  getNewJoke = () => {\n//     this.getJoke()\n//  }\n\n//  render() {\n//     const { value, categories } = this.state\n//     return (\n//        <div id='wrapper'>\n//           <h1 className='title'>Random Quote App</h1>\n//           <div id='quote-box'>\n//              <QuoteBox value={value} categories={categories} />\n//              <div id='buttons'>\n//                 <Button categories={categories} onClick={this.getNewJoke} />\n//              </div>\n//           </div>\n//        </div>\n//     )\n//  }\n// }\n\n// // Quote Box component\n// const QuoteBox = ({ value, categories }) => { //destructuring\n//  return (\n//     <React.Fragment>\n//        <div id='text'><p>{value}</p></div>\n//        <div id='author'><h5>{categories}</h5></div>\n//     </React.Fragment>\n//  )\n// }\n\n// //Button component\n// const Button = ({ onClick, categories }) => {\n//  return (\n//     <button className='button' id='new-quote' onClick={onClick}>{categories}</button>\n//  )\n// }\n\n// export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}